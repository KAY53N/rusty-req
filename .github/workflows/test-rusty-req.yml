name: Test rusty-req installation on multiple platforms

on:
  workflow_dispatch:
    inputs:
      python-versions:
        description: 'Python versions (comma separated)'
        required: true
        default: '3.9,3.10,3.11'
      platforms:
        description: 'Platforms to test'
        required: true
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'ubuntu-only'
          - 'windows-only'
          - 'macos-only'

jobs:
  test-installation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          ${{
          inputs.platforms == 'all' && '["ubuntu-latest", "windows-latest", "macos-latest"]' ||
          inputs.platforms == 'ubuntu-only' && '["ubuntu-latest"]' ||
          inputs.platforms == 'windows-only' && '["windows-latest"]' ||
          inputs.platforms == 'macos-only' && '["macos-latest"]'
          }}
        python-version: ${{ inputs.python-versions }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display platform info
        run: |
          echo "Running on: ${{ matrix.os }}"
          echo "Python version: ${{ matrix.python-version }}"
          python --version

      - name: Install rusty-req
        run: |
          pip install --upgrade pip
          pip install rusty-req --no-cache-dir

      - name: Verify installation
        run: |
          python -c "
          try:
              import rusty_req
              print('✅ rusty-req imported successfully')
              print(f'Version: {rusty_req.__version__}')
          except ImportError as e:
              print(f'❌ Import failed: {e}')
              exit(1)
          except Exception as e:
              print(f'⚠️ Error: {e}')
              exit(1)
          "