name: Build and Publish Rust Python Extension

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenSSL dev packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config

      - name: Build wheels using maturin in docker
        uses: PyO3/maturin-action@v1
        with:
          manylinux: manylinux2014
          command: build
          args: --release --out dist
        env:
          RUST_BACKTRACE: 1
          CARGO_TERM_COLOR: always


  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.3

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install maturin
        run: pip install maturin

      - name: Build Rust Python extension (abi3)
        run: maturin build --release --interpreter python3.11

      - name: List generated wheel files
        run: ls -lh target/wheels/*.whl || echo "No wheel files found"

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: target/wheels/*.whl

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rust-analyzer, rust-src

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.3

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install maturin
        run: python -m pip install maturin

      - name: Build Rust Python extension (abi3)
        run: maturin build --release --interpreter python3.11

      - name: List generated wheel files
        run: |
          $wheels = Get-ChildItem -Path "target\wheels\*.whl" -ErrorAction SilentlyContinue
          if ($wheels) {
              $wheels | ForEach-Object { Write-Output "Found wheel: $_" }
          } else {
              Write-Output "No wheel files found in target\wheels"
              # Check alternative location
              $altWheels = Get-ChildItem -Path "target\release\wheels\*.whl" -ErrorAction SilentlyContinue
              if ($altWheels) {
                  $altWheels | ForEach-Object { Write-Output "Found wheel in alternative location: $_" }
              } else {
                  Write-Output "No wheel files found in target\release\wheels either"
              }
          }

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: |
            target\wheels\*.whl
            target\release\wheels\*.whl

  publish-to-pypi:
    needs: [ build-linux, build-macos, build-windows ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.3

      - name: Install maturin
        run: pip install maturin

      - name: Download Ubuntu wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu
          path: dist/

      - name: Download macOS wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-macos
          path: dist/

      - name: Download Windows wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-windows
          path: dist/

      - name: Flatten wheel files
        run: |
          mkdir -p dist/flat
          find dist -name '*.whl' -exec cp {} dist/flat/ \;
          mv dist/flat/*.whl dist/ || true
          rm -rf dist/flat

      - name: List all wheels
        run: ls -lh dist/*.whl || echo "No wheel files found"

      - name: Upload all wheels to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: maturin upload --skip-existing dist/*.whl